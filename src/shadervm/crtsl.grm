"Name"     = 'CRTSL'
"Author"   = 'Denys Bulant'
"Version"  = '0.0.01'
"About"    = 'CRT ray tracer shading language grammar'

"Start Symbol" = <definitions>

! ------------------------------------------------- Sets

{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]
{String Chars} = {Printable} + {HT} - ["]

! ------------------------------------------------- Terminals

Comment Line		= '#'
identifier    	= {ID Head}{ID Tail}*
stringconstant	= '"' {String Chars}* '"'
number 		= {Number}+('.'{Number}+)?
shader_type		= light | surface | volume | displacement | transformation | imager
type			= real |string | vec3 | color4

! ------------------------------------------------- Rules

! ------------------------------------- Declarations

<definitions>			::= <shader_definition>

<shader_definition>		::= shader_type identifier '(' <formals> ')' <block>

<formals>			::= <variable_definitions> <formals>
				 |  

<variables>			::= <variable_definitions> <variables>
				 |  

<variable_definitions>	::= type <def_expressions> ';'

<def_expressions>		::= <def_expression>
				 |  <def_expression> ',' <def_expressions>

<def_expression>		::= identifier <def_init>

<def_init>			::= '=' <expression>
				 |  

! ------------------------------------- Statements

<block>			::= '{' <variables> <statements> '}'

<statements>			::= <statements> <statement>
				 |  

<statement>			::= <assignexpression> ';'
				 |  <procedurecall> ';'
				 |  <returnstmt> ';'
				 |  <block>

<returnstmt>			::= 'return' <expression>

! ------------------------------------- Expressions

<expression>			::= <primary>

<primary>			::= number
				 |  identifier
				 |  stringconstant
				 |  <type_ctor>
				 |  <procedurecall>
				 |  <assignexpression>

<assignexpression>		::= identifier '=' <expression>

<type_ctor>			::= type '(' <proc_arguments> ')'

<procedurecall>		::= identifier '(' <proc_arguments> ')'

<proc_arguments>		::= <expression> ',' <proc_arguments>
				 |  <expression>
				 |  
